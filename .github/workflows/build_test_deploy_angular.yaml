name: Build, Test and Deploy Angular Webapp

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: write

jobs:
  build_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21.x]
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2

        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        working-directory: front
        run: npm install

      - name: Build Application
        working-directory: front
        run: npm run build

      - name: Run Tests
        working-directory: front
        run: npm run test:ci

      - name: Generate Documentation
        working-directory: front
        run: npm run docs

      - name: Authenticate with npm
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Check if package.json version was modified
        id: check_version
        working-directory: front
        run: |
          git fetch origin master
          git log -n 1 origin/master --oneline
          OLD_VERSION=$(git show origin/master:front/package.json | jq -r '.version')
          NEW_VERSION=$(jq -r '.version' package.json)
          
          echo "Old Version: $OLD_VERSION"
          echo "New Version: $NEW_VERSION"
          
          if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_ENV
            echo "old_version=$OLD_VERSION" >> $GITHUB_ENV
            echo "new_version=$NEW_VERSION" >> $GITHUB_ENV
          else
            echo "version_changed=false" >> $GITHUB_ENV
          fi
        shell: bash {0}

      - name: Publish package if version was updated
        if: env.version_changed == 'true'
        working-directory: front
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: front/dist/integration_deploiement_personal_front/browser

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_test
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@v2